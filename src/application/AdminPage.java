/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hussa
 */
public class AdminPage extends javax.swing.JFrame {

    DB db = new DB();

    public AdminPage() {
        initComponents();
        dataGetir();
        siparisDataGetir();
        HashMap<String, String> hm = new HashMap<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnKullaniciArama = new javax.swing.JButton();
        txtArama = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMusteriler = new javax.swing.JTable();
        btnKullaniciEkle = new javax.swing.JButton();
        btnKullaniciDuzenle = new javax.swing.JButton();
        btnKullaniciSil = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSiparisler = new javax.swing.JTable();
        btnYeniSipraris = new javax.swing.JButton();
        btnYolda = new javax.swing.JButton();
        btnTeslimEdildi = new javax.swing.JButton();
        btnSiparisSil = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Arama"));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Müşteriler", "Müşteri Numarası", "Ad", "Soyad", "Telefon", "Adres" }));
        jComboBox1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox1PopupMenuWillBecomeVisible(evt);
            }
        });
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        btnKullaniciArama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_search_64.png"))); // NOI18N
        btnKullaniciArama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKullaniciAramaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtArama))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnKullaniciArama, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtArama, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnKullaniciArama, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Müşteriler"));

        jTableMusteriler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMusteriler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMusterilerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMusteriler);

        btnKullaniciEkle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_add_64.png"))); // NOI18N
        btnKullaniciEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKullaniciEkleActionPerformed(evt);
            }
        });

        btnKullaniciDuzenle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_edit_64.png"))); // NOI18N
        btnKullaniciDuzenle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKullaniciDuzenleActionPerformed(evt);
            }
        });

        btnKullaniciSil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_delete_64.png"))); // NOI18N
        btnKullaniciSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKullaniciSilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnKullaniciEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(btnKullaniciDuzenle, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(btnKullaniciSil, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnKullaniciDuzenle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKullaniciSil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKullaniciEkle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Siparişler"));

        jTableSiparisler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableSiparisler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSiparislerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableSiparisler);

        btnYeniSipraris.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_delivery_64.png"))); // NOI18N
        btnYeniSipraris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeniSiprarisActionPerformed(evt);
            }
        });

        btnYolda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_transport_64.png"))); // NOI18N
        btnYolda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYoldaActionPerformed(evt);
            }
        });

        btnTeslimEdildi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_safe_64.png"))); // NOI18N
        btnTeslimEdildi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeslimEdildiActionPerformed(evt);
            }
        });

        btnSiparisSil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_file_delete_64.png"))); // NOI18N
        btnSiparisSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiparisSilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnYeniSipraris, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(btnYolda, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(btnTeslimEdildi, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnSiparisSil, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnYeniSipraris, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnYolda, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiparisSil, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTeslimEdildi, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

//    public void siparisDateGetirHashMap(){
//        ArrayList<HashMap<String, String>> lsm = new ArrayList<>();
//        DefaultTableModel dtm = new DefaultTableModel();
//        dtm.addColumn("Siparis ID");
//        dtm.addColumn("Adi");
//        dtm.addColumn("Soyadi");
//        dtm.addColumn("Telefon");
//        dtm.addColumn("Adres");
//        dtm.addColumn("Durum");
//        dtm.addColumn("Tutar");
//        
//        for (HashMap<String, String> item : lsm) {
//            dtm.addRow(new String[] { item.get(Kisi.adi),item.get(Kisi.soyadi),item.get(Kisi.mail),item.get(Kisi.sifre) });
//        }
//        jTableSiparisler.setModel(dtm);
//    }
    public void siparisDataGetir() {
        try {
            String musteriQuery = "select siparisler.sid, musteriler.mAdi,"
                    + "musteriler.mSoyadi,musteriler.mTelefon,musteriler.mAdres,"
                    + "siparisler.sDurum,siparisler.sTutar "
                    + "from musteriler inner join siparisler on musteriler.mid = siparisler.smid order by sid desc";
            ResultSet rs = db.baglan().executeQuery(musteriQuery);
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.addColumn("Sipariş id");
            dtm.addColumn("Adı");
            dtm.addColumn("Soyadı");
            dtm.addColumn("Telefon");
            dtm.addColumn("Adres");
            dtm.addColumn("Durum");
            dtm.addColumn("Tutar");

            // satırlara gelecek datalar alınıyor
            while (rs.next()) {
                dtm.addRow(new String[]{rs.getString("sid"), rs.getString("mAdi"), rs.getString("mSoyadi"), rs.getString("mTelefon"), rs.getString("mAdres"), rs.getString("sDurum"), rs.getString("sTutar")});
            }
            jTableSiparisler.setModel(dtm);
        } catch (Exception e) {
            System.err.println("Data getirme hatası : " + e);
        } finally {
            db.kapat();
        }
    }

    public void dataGetir() {
        try {
            String musteriQuery = "select *from musteriler order by mid ";
            ResultSet rs = db.baglan().executeQuery(musteriQuery);
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.addColumn("ID");
            dtm.addColumn("Adı");
            dtm.addColumn("Soyadı");
            dtm.addColumn("Telefon");
            dtm.addColumn("Adres");
            dtm.addColumn("Mail");
            dtm.addColumn("Şifre");

            // satırlara gelecek datalar alınıyor
            while (rs.next()) {
                dtm.addRow(new String[]{rs.getString("mid"), rs.getString("mAdi"), rs.getString("mSoyadi"), rs.getString("mTelefon"), rs.getString("mAdres"), rs.getString("mMail"), rs.getString("mSifre")});
            }
            jTableMusteriler.setModel(dtm);
        } catch (Exception e) {
            System.err.println("Data getirme hatası : " + e);
        } finally {
            db.kapat();
        }
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed


    }//GEN-LAST:event_jComboBox1ActionPerformed

    public void arama(String aramaQuery) {
        try {
            ResultSet rs = db.baglan().executeQuery(aramaQuery);
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.addColumn("ID");
            dtm.addColumn("Adı");
            dtm.addColumn("Soyadı");
            dtm.addColumn("Telefon");
            dtm.addColumn("Adres");
            dtm.addColumn("Mail");
            dtm.addColumn("Şifre");

            // satırlara gelecek datalar alınıyor
            while (rs.next()) {
                dtm.addRow(new String[]{rs.getString("mid"), rs.getString("mAdi"), rs.getString("mSoyadi"), rs.getString("mTelefon"), rs.getString("mAdres"), rs.getString("mMail"), rs.getString("mSifre")});
            }
            jTableMusteriler.setModel(dtm);
        } catch (Exception e) {
            System.err.println("Data getirme hatası : " + e);
        } finally {
            db.kapat();
        }
    }

    private void btnKullaniciAramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKullaniciAramaActionPerformed

        String aranacakKelime = "%" + txtArama.getText() + "%";

        if (jComboBox1.getSelectedIndex() == 0) {
            dataGetir();
        } else if (jComboBox1.getSelectedIndex() == 1) {
            String aramaQuery = "select*from musteriler where mid like '" + aranacakKelime + "' ";
            arama(aramaQuery);
        } else if (jComboBox1.getSelectedIndex() == 2) {
            String aramaQuery = "select*from musteriler where mAdi like '" + aranacakKelime + "' ";
            arama(aramaQuery);
        } else if (jComboBox1.getSelectedIndex() == 3) {
            String aramaQuery = "select*from musteriler where mSoyadi like '" + aranacakKelime + "' ";
            arama(aramaQuery);
        } else if (jComboBox1.getSelectedIndex() == 4) {
            String aramaQuery = "select*from musteriler where mTelefon like '" + aranacakKelime + "' ";
            arama(aramaQuery);
        } else {
            String aramaQuery = "select*from musteriler where mAdres like '" + aranacakKelime + "' ";
            arama(aramaQuery);
        }


    }//GEN-LAST:event_btnKullaniciAramaActionPerformed

    YeniKayit yk = new YeniKayit();
    private void btnKullaniciEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKullaniciEkleActionPerformed
        yk.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKullaniciEkleActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked

    }//GEN-LAST:event_jComboBox1MouseClicked

    static String mid = "";
    private void jTableMusterilerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMusterilerMouseClicked

        int row = jTableMusteriler.getSelectedRow();
        if (row > -1) {
            mid = "" + jTableMusteriler.getValueAt(row, 0);
        }
    }//GEN-LAST:event_jTableMusterilerMouseClicked

    private void btnKullaniciSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKullaniciSilActionPerformed

        if (mid.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Lütfen seçim yapınız");
        } else {
            int cevap = JOptionPane.showConfirmDialog(rootPane, "Silmek İstediğinizden Emin Misiniz ?", "Silme işlemi", JOptionPane.YES_NO_OPTION);
            if (cevap == 0) {
                try {
                    String silQuery = "delete from musteriler where mid = '" + mid + "' ";
                    int silSonuc = db.baglan().executeUpdate(silQuery);
                    if (silSonuc > 0) {
                        dataGetir();
                        JOptionPane.showMessageDialog(rootPane, "Silme işlemi başarılı");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Silme hatası !");
                    }
                } catch (Exception e) {
                    System.err.println("Silme hatası : " + e);
                } finally {
                    db.kapat();
                }
            }

        }
    }//GEN-LAST:event_btnKullaniciSilActionPerformed

    private void btnKullaniciDuzenleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKullaniciDuzenleActionPerformed

        if (mid.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Lütfen seçim yapınız");
        } else {
            KullaniciDuzenle kd = new KullaniciDuzenle(mid);
            kd.setVisible(true);
            dispose();
        }

    }//GEN-LAST:event_btnKullaniciDuzenleActionPerformed

    private void jComboBox1PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox1PopupMenuWillBecomeVisible
        txtArama.setText("");
    }//GEN-LAST:event_jComboBox1PopupMenuWillBecomeVisible


    private void btnYeniSiprarisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeniSiprarisActionPerformed

        if (mid.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Lütfen seçim yapınız");
        } else {
            Siparis s = new Siparis();
            s.setVisible(true);
            dispose();
        }

    }//GEN-LAST:event_btnYeniSiprarisActionPerformed

    private void btnYoldaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYoldaActionPerformed
        try {
            String durum = "Yolda";
            String durumQuery = "update siparisler set sDurum= '" + durum + "' where sid= '" + sid + "' ";
            int yazSonuc = db.baglan().executeUpdate(durumQuery);

        } catch (Exception e) {
        } finally {
            db.kapat();
        }
        siparisDataGetir();

    }//GEN-LAST:event_btnYoldaActionPerformed

    String sid = "";
    private void jTableSiparislerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSiparislerMouseClicked

        int row = jTableSiparisler.getSelectedRow();
        if (row > -1) {
            sid = "" + jTableSiparisler.getValueAt(row, 0);

        }
    }//GEN-LAST:event_jTableSiparislerMouseClicked

    private void btnTeslimEdildiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeslimEdildiActionPerformed

        try {
            String durum = "Teslim Edildi";
            String durumQuery = "update siparisler set sDurum= '" + durum + "' where sid= '" + sid + "' ";
            int yazSonuc = db.baglan().executeUpdate(durumQuery);

        } catch (Exception e) {
        } finally {
            db.kapat();
        }
        siparisDataGetir();
    }//GEN-LAST:event_btnTeslimEdildiActionPerformed

    private void btnSiparisSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiparisSilActionPerformed

        if (sid.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Lütfen seçim yapınız");
        } else {
            int cevap = JOptionPane.showConfirmDialog(rootPane, "Silmek İstediğinizden Emin Misiniz ?", "Silme işlemi", JOptionPane.YES_NO_OPTION);
            if (cevap == 0) {
                try {
                    String silQuery = "delete from siparisler where sid = '" + sid + "' ";
                    int silSonuc = db.baglan().executeUpdate(silQuery);
                    if (silSonuc > 0) {
                        siparisDataGetir();
                        JOptionPane.showMessageDialog(rootPane, "Silme işlemi başarılı");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Silme hatası !");
                    }
                } catch (Exception e) {
                    System.err.println("Silme hatası : " + e);
                } finally {
                    db.kapat();
                }
            }

        }
    }//GEN-LAST:event_btnSiparisSilActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int cevap = JOptionPane.showConfirmDialog(rootPane, "Kapatmak İstediğinizden Emin Misiniz ?", "Kapatma işlemi", JOptionPane.YES_NO_OPTION);
        if (cevap == 0) {
            LoginPage lp = new LoginPage();
            lp.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKullaniciArama;
    private javax.swing.JButton btnKullaniciDuzenle;
    private javax.swing.JButton btnKullaniciEkle;
    private javax.swing.JButton btnKullaniciSil;
    private javax.swing.JButton btnSiparisSil;
    private javax.swing.JButton btnTeslimEdildi;
    private javax.swing.JButton btnYeniSipraris;
    private javax.swing.JButton btnYolda;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMusteriler;
    private javax.swing.JTable jTableSiparisler;
    private javax.swing.JTextField txtArama;
    // End of variables declaration//GEN-END:variables
}
